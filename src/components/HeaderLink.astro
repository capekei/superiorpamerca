---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'a'>;

const { href, class: className, ...props } = Astro.props;
const pathname = Astro.url.pathname.replace(import.meta.env.BASE_URL, '');
const subpath = pathname.match(/[^\/]+/g);
const isActive = href === pathname || href === '/' + (subpath?.[0] || '');
---

<a href={href} 
   class:list={[
     "relative px-4 py-2 inline-block text-white no-underline rounded-full transition-all duration-300 font-['SF_Pro_Display',-apple-system,BlinkMacSystemFont,sans-serif] font-medium tracking-tight hover:text-white/90 group",
     { "font-semibold text-accent after:bg-accent after:opacity-100": isActive },
     className
   ]} 
   {...props}
>
	<span class="relative z-10"><slot /></span>
	<span class="absolute inset-0 rounded-full bg-white/0 group-hover:bg-white/10 transition-all duration-300"></span>
	<span class="absolute bottom-1 left-1/2 transform -translate-x-1/2 w-1/2 h-0.5 bg-white/0 group-hover:bg-white/30 transition-all duration-300 rounded-full opacity-0 group-hover:opacity-100"></span>
	<span class="absolute bottom-1 left-1/2 transform -translate-x-1/2 w-1/2 h-0.5 bg-accent/0 transition-all duration-300 rounded-full opacity-0 after:opacity-0 after:scale-0 after:origin-center after:transition-all after:duration-300 group-hover:after:scale-100 group-hover:after:opacity-100 ${isActive ? 'opacity-100' : 'group-hover:opacity-100'}"></span>
</a>
