---
import { SHOP } from '../../../config/constants';

// Definición de props para el componente
interface Props {
  id: string;
  nombre: string;
  precio: number;
  descripcion: string;
  imagen: string;
  url?: string;
  showAddToCart?: boolean;
}

const { 
  id, 
  nombre, 
  precio, 
  descripcion, 
  imagen, 
  url = `/tienda/${id}`,
  showAddToCart = true 
} = Astro.props;

// Formatear precio con el símbolo de moneda
const formattedPrice = `${SHOP.CURRENCY_SYMBOL}${precio.toFixed(2)}`;
---

<div class="bg-white rounded-lg overflow-hidden shadow-md hover:shadow-xl transition-all duration-300 border border-gray-100 h-full flex flex-col transform hover:-translate-y-1">
  <a href={url} class="block overflow-hidden h-48">
    <img 
      src={imagen || '/img/productos/placeholder.jpg'} 
      alt={nombre} 
      class="w-full h-full object-cover transition-transform duration-300 hover:scale-105"
      onerror="this.src='/img/productos/placeholder.jpg'"
    />
  </a>
  
  <div class="p-4 flex flex-col flex-grow">
    <h3 class="text-lg font-bold text-primary mb-1 line-clamp-1">
      <a href={url} class="hover:text-accent">{nombre}</a>
    </h3>
    
    <p class="text-accent font-bold text-lg mb-2">{formattedPrice}</p>
    
    <p class="text-text-secondary text-sm mb-4 line-clamp-2">{descripcion}</p>
    
    <div class="mt-auto flex gap-2">
      <a 
        href={url} 
        class="flex-grow py-2 px-4 bg-primary text-white rounded text-center font-medium hover:bg-primary/90 transition-colors"
      >
        Ver detalles
      </a>
      
      {showAddToCart && (
        <button 
          class="w-10 h-10 bg-accent text-white rounded flex items-center justify-center hover:bg-accent/90 transition-colors add-to-cart"
          data-id={id}
          data-nombre={nombre}
          data-precio={precio}
          data-imagen={imagen}
          aria-label="Agregar al carrito"
        >
          <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" viewBox="0 0 16 16">
            <path d="M0 1.5A.5.5 0 0 1 .5 1H2a.5.5 0 0 1 .485.379L2.89 3H14.5a.5.5 0 0 1 .491.592l-1.5 8A.5.5 0 0 1 13 12H4a.5.5 0 0 1-.491-.408L2.01 3.607 1.61 2H.5a.5.5 0 0 1-.5-.5zM3.102 4l1.313 7h8.17l1.313-7H3.102zM5 12a2 2 0 1 0 0 4 2 2 0 0 0 0-4zm7 0a2 2 0 1 0 0 4 2 2 0 0 0 0-4zm-7 1a1 1 0 1 1 0 2 1 1 0 0 1 0-2zm7 0a1 1 0 1 1 0 2 1 1 0 0 1 0-2z"/>
          </svg>
        </button>
      )}
    </div>
  </div>
</div>

<script>
  // Este script se ejecutará en el cliente
  document.addEventListener('DOMContentLoaded', () => {
    // Agregar event listeners a todos los botones de agregar al carrito
    document.querySelectorAll('.add-to-cart').forEach(button => {
      button.addEventListener('click', (e) => {
        const button = e.currentTarget as HTMLButtonElement;
        const id = button.dataset.id;
        const nombre = button.dataset.nombre;
        const precio = parseFloat(button.dataset.precio || '0');
        const imagen = button.dataset.imagen;
        
        // Intentar importar la tienda de carrito si existe
        try {
          // Importación dinámica del store de carrito
          import('../../../stores/carrito').then(({ addToCart }) => {
            addToCart({ id, nombre, precio, imagen, cantidad: 1 });
            
            // Mostrar notificación
            const notification = document.createElement('div');
            notification.className = 'fixed bottom-4 right-4 bg-accent text-white px-4 py-2 rounded-lg shadow-lg z-50 animate-fade-in';
            notification.textContent = `${nombre} agregado al carrito`;
            document.body.appendChild(notification);
            
            // Eliminar notificación después de 3 segundos
            setTimeout(() => {
              notification.classList.add('animate-fade-out');
              setTimeout(() => notification.remove(), 500);
            }, 3000);
          }).catch(err => {
            console.error('Error al cargar el módulo de carrito:', err);
            alert(`${nombre} agregado al carrito`);
          });
        } catch (error) {
          console.error('Error al agregar al carrito:', error);
          alert(`${nombre} agregado al carrito`);
        }
      });
    });
  });
</script>
